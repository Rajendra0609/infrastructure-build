sudo apt update
sudo apt upgrade

sudo apt install git
#####################Jenkins#############################
https://www.jenkins.io/download/
#######################jenkins##########################
sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
    https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
    https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
    /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt update
sudo apt-get install fontconfig openjdk-17-jre
sudo apt-get install jenkins

###############ansible########################
sudo apt update
$ sudo apt install software-properties-common
$ sudo add-apt-repository --yes --update ppa:ansible/ansible
$ sudo apt install ansible
sudo adduser <username>
sudo usermod -aG sudo <username>
sudo visudo
<username> ALL=(ALL:ALL) ALL
su - <username>

###############docker####################
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

##############maven########################
sudo apt install maven

#############apache tomcat################
sudo apt install tomcat9
sudo systemctl status tomcat9
sudo systemctl enable tomcat9
###############nginx##############
sudo apt install nginx
sudo systemctl start nginx
sudo ufw allow 80
sudo ufw allow 443

###################sonarqube############################

docker run -d --name sonar -p 9000:9000 sonarqube:lts-community


sudo apt install default-jdk
java -version
wget -q https://www.postgresql.org/media/keys... -O - | sudo apt-key add -
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main"  /etc/apt/sources.list.d/pgdg.list'
sudo apt update
sudo apt install postgresql-13
sudo systemctl is-enabled postgresql
sudo systemctl status postgresql
sudo -u postgres psql
CREATE USER sonarqube WITH PASSWORD 'Password';
CREATE DATABASE sonarqube OWNER sonarqube;
GRANT ALL PRIVILEGES ON DATABASE sonarqube TO sonarqube;
\l
\du
\q
sudo useradd -b /opt/sonarqube -s /bin/bash sonarqube
sudo nano /etc/sysctl.conf
vm.max_map_count=524288
fs.file-max=131072
sudo sysctl --system
ulimit -n 131072
ulimit -u 8192
sudo nano /etc/security/limits.d/99-sonarqube.conf
sonarqube   -   nofile   131072
sonarqube   -   nproc    8192
sudo apt install unzip software-properties-common wget
wget https://binaries.sonarsource.com/Dist...
unzip sonarqube-9.6.1.59531.zip
mv sonarqube-9.6.1.59531 /opt/sonarqube
sudo chown -R sonarqube:sonarqube /opt/sonarqube
nano /opt/sonarqube/conf/sonar.properties
sudo nano /etc/systemd/system/sonarqube.service
[Unit]
Description=SonarQube service
After=syslog.target network.target

[Service]
Type=forking
ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
User=sonarqube
Group=sonarqube
Restart=always
LimitNOFILE=65536
LimitNPROC=4096

[Install]
WantedBy=multi-user.target
sudo systemctl daemon-reload
sudo systemctl start sonarqube.service
sudo systemctl enable sonarqube.service
sudo systemctl status sonarqube.service
sudo apt install nginx
sudo systemctl is-enabled nginx
sudo systemctl status nginx
sudo nano /etc/nginx/sites-available/sonarqube.conf

server {

    listen 80;
    server_name sonar.hwdomain.io;
    access_log /var/log/nginx/sonar.access.log;
    error_log /var/log/nginx/sonar.error.log;
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    location / {
        proxy_pass http://127.0.0.1:9000;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;
    }
}

sudo ln -s /etc/nginx/sites-available/sonarqube.conf /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl restart nginx
#######################trivy#################################
   sudo apt-get install wget apt-transport-https gnupg lsb-release
wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
sudo apt-get update
sudo apt-get install trivy
trivy image --format json -o report.json 8e5cdc82e809
trivy image <dockerimage>
trivy image --format template --template "@/usr/local/share/trivy/templates/html.tpl" -o report.html 0dff73ad9920

#############minikube################################
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube

minikube start

#########kubectl######################
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
   
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
#############################################################################
############################sonarqube#######################################(https://github.com/praveensirvi1212/DevSecOps-project/blob/main/sonarqube_installation_with_postgres_database.md)
#Install SonarQube on Ubuntu 22.04
Although the process is simple, there are a few steps involved. Before you start, connect via SSH and update the server.
```sh 
sudo apt update
sudo apt upgrade
 ```
Then install some packages needed to complete the process.

```sh 
sudo apt install wget apt-transport-https gnupg2 software-properties-common unzip
 ```
Now you can continue.

#Install Java on Ubuntu 22.04
The next step is to install Java because SonarQube is created with this language. Therefore, to install Java, simply run the following command
```sh 
sudo apt install openjdk-11-jdk
 ```
At the end of the process, you can check the Java version with this command:
```sh 
java -version
 ```

#Install PostgreSQL on Ubuntu 22.04
SonarQube requires PostgreSQL as a database driver. So, you have to install it and create a new user and database.

First, install PostgreSQL with this command:
```sh 
sudo apt install postgresql postgresql-contrib
 ```
Then, enable and start it.
```sh 
sudo systemctl enable postgresql
sudo systemctl start postgresql ```
 ```
Avoid issues by checking if the service is running well.
```sh 
sudo systemctl status postgresql
 ```

With PostgreSQL installed, the next step is to access the console, to create the new user and database.
```sh 
sudo -u postgres psql
 ```
Inside the console, you can now create the user
```sh 
CREATE USER sonarqube WITH PASSWORD 'pass';
 ```
Replace pass with a stronger password. Now create the new database and make it belong to the user you just created.
```sh 
CREATE DATABASE sonarqube OWNER sonarqube;
 ```
Again, you can replace sonarqube with the database name of your choice.

Assign appropriate permissions to the new database:
```sh
GRANT ALL PRIVILEGES ON DATABASE sonarqube TO sonarqube;
 ```
You can exit now.
```sh
exit
 ```
#Install SonarQube on Ubuntu 22.04
First create a new system user for SonarQube.
```sh
sudo useradd -b /opt/sonarqube -s /bin/bash sonarqube
 ```
Then, modify some system parameters to adjust it to SonarQube
```sh
sudo nano /etc/sysctl.conf
 ```
And set these values. If they are not there, then add them at the end of the file:
```sh
vm.max_map_count=524288
fs.file-max=131072
 ```
Save the changes and close the editor. To apply the changes, run
```sh
sudo sysctl --system
 ```
Now download SonarQube
```sh
wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.6.1.59531.zip
 ```
The command may change depending on the latest version of SonarQube. Check first before venturing.

Unzip the file:
```sh
unzip sonarqube-9.6.1.59531.zip
 ```
Move the folder to the /opt/ directory where the sonarqube userâ€™s home has been set up
```sh
sudo mv sonarqube-9.6.1.59531 /opt/sonarqube
```
Make that folder belong to the created user.
```sh
sudo chown -R sonarqube:sonarqube /opt/sonarqube
```
Now it is time to configure it a little bit.

Configuring SonarQube before using it
The configuration file is /opt/sonarqube/conf/sonar.properties where all SonarQube options reside.

Edit it
```sh
sudo vi /opt/sonarqube/conf/sonar.properties
```
The first thing to do is to configure the database connection. At the end of the file you can add these lines:
```sh
sonar.jdbc.username=sonarqube
sonar.jdbc.password=pass
sonar.jdbc.url=jdbc:postgresql://localhost:5432/sonarqube
```
You have to adapt it to the values you have set.

Now with the help of your text editor, uncomment each of these lines.
```sh
sonar.web.port=9000
```

Save the changes and close the editor.

Then it is convenient to create a configuration file to handle SonarQube as a system service
```sh
sudo vi /etc/systemd/system/sonarqube.service
```
And add the following content
```sh
[Unit]
Description=SonarQube service
After=syslog.target network.target

[Service]
Type=forking
ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
User=sonarqube
Group=sonarqube
Restart=always
LimitNOFILE=65536
LimitNPROC=4096

[Install]
WantedBy=multi-user.target
```
Save the changes and to apply them, run
```sh
sudo systemctl daemon-reload
```
Start the service:
```sh
sudo systemctl start sonarqube.service
```
Enable it to start with the system:
```sh
sudo systemctl enable sonarqube.service
```
Verify that everything is OK:
```sh
systemctl status sonarqube.service
```


#Access to the SonarQube web interface
Now, open your web browser and access http://yourserver:9000 and you will see this screen indicating that SonarQube is running

Then log in with the default credentials admin/admin.

You will be prompted to change the password, and finally, you will see the main SonarQube screen.
##################################################3